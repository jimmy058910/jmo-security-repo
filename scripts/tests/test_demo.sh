#!/bin/bash
# test_demo.sh - Demonstration of the security audit tool using existing sample data

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DEMO_DIR="/tmp/security-audit-demo-$(date +%s)"

echo "╔═══════════════════════════════════════════════════════════╗"
echo "║        Security Audit Tool - Demo Test                    ║"
echo "╔═══════════════════════════════════════════════════════════╝"
echo ""

echo "This demo will:"
echo "  1. Create a test directory structure"
echo "  2. Populate minimal synthetic JSON stubs (no secrets)"
echo "  3. Generate dashboard and comparison reports"
echo "  4. Display results"
echo ""

# Create demo directory structure
echo "📁 Creating demo directory structure..."
mkdir -p "$DEMO_DIR/individual-repos"
mkdir -p "$DEMO_DIR/tool-comparisons"
mkdir -p "$DEMO_DIR/summaries"
mkdir -p "$DEMO_DIR/raw-outputs"

# Populate minimal synthetic data (no gitleaks samples; clean slate)
echo "📋 Creating synthetic per-repo stubs..."
for repo_name in demo-a demo-b; do
  mkdir -p "$DEMO_DIR/individual-repos/$repo_name"
  # Create empty results for supported tools (all zero findings)
  echo '{"results": []}' >"$DEMO_DIR/individual-repos/$repo_name/semgrep.json"
  echo '{"Results": []}' >"$DEMO_DIR/individual-repos/$repo_name/trivy.json"
  echo '{"results": {"failed_checks": []}}' >"$DEMO_DIR/individual-repos/$repo_name/checkov.json"
  echo '{"results": []}' >"$DEMO_DIR/individual-repos/$repo_name/tfsec.json"
  echo '[]' >"$DEMO_DIR/individual-repos/$repo_name/noseyparker.json"
  echo '[]' >"$DEMO_DIR/individual-repos/$repo_name/trufflehog.json"
  echo "  ✓ Added $repo_name (synthetic)"
done

# Create sample metrics CSV
echo "📊 Generating sample metrics..."
cat >"$DEMO_DIR/summaries/metrics.csv" <<EOF
repository,total_issues,critical,high,medium
demo-a,0,0,0,0
demo-b,0,0,0,0
EOF

# Generate dashboard
echo "🎨 Generating HTML dashboard..."
python3 "$SCRIPT_DIR/generate_dashboard.py" "$DEMO_DIR"

# Generate comparison report
echo "📈 Generating comparison report..."
bash "$SCRIPT_DIR/generate_comparison_report.sh" "$DEMO_DIR"

# Create a summary report
cat >"$DEMO_DIR/SUMMARY_REPORT.md" <<EOF
# Security Audit Report - Demo

**Date:** $(date)
**Testing Directory:** Demo with synthetic sample data (clean slate)
**Total Repositories Analyzed:** 2

---

## Executive Summary

This is a demonstration using synthetic, non-sensitive sample data.

### Tools Illustrated:
- **TruffleHog**: Deep secret scanning with verification (synthetic empty)
- **Semgrep**: Pattern-based vulnerability detection (synthetic empty)
- **Nosey Parker**: Deep pattern matching for secrets (synthetic empty)

---

## Aggregate Results

### Overall Statistics
- **Total Issues Found:** 0
- **Critical Issues:** 0
- **High Severity Issues:** 0
- **Medium Severity Issues:** 0

### Repository Breakdown

| Repository | Total Issues | Critical | High | Medium |
|------------|--------------|----------|------|--------|
| demo-a | 0 | 0 | 0 | 0 |
| demo-b | 0 | 0 | 0 | 0 |

---

## Recommendations

### Critical Actions Required:
- Review all **0 critical** issues immediately
- Verified secrets should be rotated/revoked urgently

### High Priority:
- Address **19 high severity** issues in next sprint
- Implement secret scanning in CI/CD pipeline

### Medium Priority:
- Plan remediation for **0 medium severity** issues
- Update security policies and developer training

---

*Generated by Security Audit Tool - $(date)*
EOF

echo ""
echo "✅ Demo completed successfully!"
echo ""
echo "╔═══════════════════════════════════════════════════════════╗"
echo "║              Demo Results Available                        ║"
echo "╚═══════════════════════════════════════════════════════════╝"
echo ""
echo "📁 Demo Directory: $DEMO_DIR"
echo ""
echo "📊 Generated Reports:"
echo "  • Summary Report:    $DEMO_DIR/SUMMARY_REPORT.md"
echo "  • HTML Dashboard:    $DEMO_DIR/dashboard.html"
echo "  • Tool Comparison:   $DEMO_DIR/tool-comparisons/comparison.md"
echo ""
echo "🔍 View results:"
echo "  cat $DEMO_DIR/SUMMARY_REPORT.md"
echo "  open $DEMO_DIR/dashboard.html  # (macOS)"
echo "  xdg-open $DEMO_DIR/dashboard.html  # (Linux)"
echo ""
echo "🗑️  Clean up demo:"
echo "  rm -rf $DEMO_DIR"
echo ""
